name: Build

on: 
  push:
    branches:   
      - master
    tags:
      - v*
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Install dependencies
      run: lein deps
    - name: Run tests
      run: lein test
    - name: Build
      run: lein uberjar
    - name: Create Release
      id: create_release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: target/codescene-ci-cd.standalone.jar
        asset_name: codescene-ci-cd.standalone.jar
        asset_content_type: application/zip
    - uses: azure/docker-login@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Publish Docker Image
      if: startsWith(github.ref, 'refs/tags/v')
      env:
        GITHUB_REF: ${{ github.ref }}
      run: |
        export VERSION=${GITHUB_REF#refs/tags/v}
        export IMAGE=empear/codescene-ci-cd
        docker build -t $IMAGE:$VERSION .
        docker tag $IMAGE:$VERSION $IMAGE:latest 
        docker push $IMAGE:$VERSION
        docker push $IMAGE:latest